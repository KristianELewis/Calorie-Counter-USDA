/*
/*
DESCRIPTION

    This file is used to view individual food objects from the JSON file created by the USDASimplifier.js file

    It requiers a command line arguement of -s or -v

    -s is the seach option, it uses a number input by the user and will display the object in the JSON file at that index
    It only verifies that the input is a number, not if it is a valid index 

    the -v was to stand for validator
    It doesnt validate the file, and currently will not work with a file generated by USDASimplifier.js file.
    It was originally used to find discrepencies between the given "labelNutrients" and the USDA provided nutrient objects and to find
    any potential issues with the data from the USDA
*/

const data = require("./USDABrandedFoodsData.json")
const prompt = require('prompt-sync')({sigint: true});


if(process.argv[2] === "-s"){
    while (true){
        let input = prompt("Search the database: ")
        input = parseInt(input)
        if(!isNaN(input)){
            console.log(data.BrandedFoods[input])
        }
        else{
            console.log(input);
        }
    }
}

//validator
else if(process.argv[2] == "-v"){
    let count = 0

    let undefinedCalories = 0;
    let undefinedEnergy = 0;
    let undefinedFat = 0;
    let undefinedFatUSDA = 0;
    let undefinedProtein = 0;
    let undefinedProteinUSDA = 0;
    let undefinedCarb = 0;
    let undefinedCarbUSDA = 0;
    for(let food of data.BrandedFoods)
    {
        if (food.labelNutrients === undefined){
            console.log("labelNutrients Undefined: " + count)
        }
        else if(food.labelNutrients.calories === undefined){
            undefinedCalories++;
            if(food.nutrients.findIndex(element => {
                if(element.name === "Energy")
                {
                    return true;
                }
                else{
                    return false;
                }
            }) === -1){
                undefinedEnergy++; 
            }
        }
        else if(food.labelNutrients.fat === undefined){
            undefinedFat++;
            if(food.nutrients.findIndex(element => {
                if(element.name === "Total lipid (fat)")
                {
                    return true;
                }
                else{
                    return false;
                }
            }) === -1){
                undefinedFatUSDA++;
            }
        }
        else if(food.labelNutrients.protein === undefined){
            undefinedProtein++;
            if(food.nutrients.findIndex(element => {
                if(element.name === "Protein")
                {
                    return true;
                }
                else{
                    return false;
                }
            }) === -1){
                undefinedProteinUSDA++;
            }
        }
        else if(food.labelNutrients.carbohydrates === undefined){
            undefinedCarb++;
            if(food.nutrients.findIndex(element => {
                if(element.name === "Carbohydrate, by difference")
                {
                    return true;
                }
                else{
                    return false;
                }
            }) === -1){
                undefinedCarbUSDA++;
            }
        }
        count++;
    }
    console.log("Calories: " + undefinedCalories);
    console.log("Energy: " + undefinedEnergy);
    console.log("Fat: " + undefinedFat);
    console.log("FatLipid: " + undefinedFatUSDA);
    console.log("Protein: " + undefinedProtein);
    console.log("ProteinUSDA: " + undefinedProteinUSDA);
    console.log("Carb: " + undefinedCarb);
    console.log("CarbUSDA: " + undefinedCarbUSDA);
}
else {
    console.log("No command line arguement given")
}